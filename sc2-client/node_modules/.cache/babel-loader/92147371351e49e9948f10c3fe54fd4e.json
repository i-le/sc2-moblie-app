{"ast":null,"code":"/*\n包含n个reducer函数：\n根据老得state和指定的action返回一个新的state\n*/\nimport { combineReducers } from 'redux';\nimport { AUTH_SUCCESS, ERROR_MSG } from './Action-types';\nimport { getRedirectTo } from '../utils/index';\nconst initUser = {\n  username: '',\n  type: '',\n  msg: '',\n  redirectTo: '' // 需要自动重定向的路由路径\n\n}; //产生user状态的renducer\n\nfunction user(state = initUser, action) {\n  switch (action.type) {\n    case AUTH_SUCCESS:\n      //data 是user\n      return { ...state,\n        ...action.data,\n        redirectTo: '/'\n      };\n\n    case ERROR_MSG:\n      //data 是msg\n      return { ...state,\n        msg: action.data\n      };\n\n    default:\n      return state;\n  }\n}\n\nexport default combineReducers({\n  user\n}); //向外暴露的状态的结构 ： {user: { }}","map":{"version":3,"sources":["/Users/s/Desktop/react/sc2-app/sc2-client/src/redux/Reducers.js"],"names":["combineReducers","AUTH_SUCCESS","ERROR_MSG","getRedirectTo","initUser","username","type","msg","redirectTo","user","state","action","data"],"mappings":"AAAA;;;;AAIA,SAAQA,eAAR,QAA8B,OAA9B;AAEA,SACIC,YADJ,EAEIC,SAFJ,QAGO,gBAHP;AAKA,SAAQC,aAAR,QAA4B,gBAA5B;AAEA,MAAMC,QAAQ,GAAG;AACbC,EAAAA,QAAQ,EAAE,EADG;AAEbC,EAAAA,IAAI,EAAE,EAFO;AAGbC,EAAAA,GAAG,EAAE,EAHQ;AAIbC,EAAAA,UAAU,EAAE,EAJC,CAIE;;AAJF,CAAjB,C,CAOA;;AACA,SAASC,IAAT,CAAcC,KAAK,GAAGN,QAAtB,EAAgCO,MAAhC,EAAwC;AACpC,UAAQA,MAAM,CAACL,IAAf;AACI,SAAKL,YAAL;AAAmB;AACf,aAAO,EAAC,GAAGS,KAAJ;AAAW,WAAGC,MAAM,CAACC,IAArB;AAA2BJ,QAAAA,UAAU,EAAE;AAAvC,OAAP;;AACJ,SAAKN,SAAL;AAAgB;AACZ,aAAO,EAAC,GAAGQ,KAAJ;AAAWH,QAAAA,GAAG,EAAEI,MAAM,CAACC;AAAvB,OAAP;;AACJ;AACI,aAAOF,KAAP;AANR;AAQH;;AAGD,eAAeV,eAAe,CAAC;AAC3BS,EAAAA;AAD2B,CAAD,CAA9B,C,CAIA","sourcesContent":["/*\n包含n个reducer函数：\n根据老得state和指定的action返回一个新的state\n*/\nimport {combineReducers} from 'redux'\n\nimport {\n    AUTH_SUCCESS,\n    ERROR_MSG\n} from './Action-types'\n\nimport {getRedirectTo} from '../utils/index'\n\nconst initUser = {\n    username: '',\n    type: '',\n    msg: '',\n    redirectTo: '' // 需要自动重定向的路由路径\n}\n\n//产生user状态的renducer\nfunction user(state = initUser, action) {\n    switch (action.type) {\n        case AUTH_SUCCESS: //data 是user\n            return {...state, ...action.data, redirectTo: '/'}\n        case ERROR_MSG: //data 是msg\n            return {...state, msg: action.data}\n        default:\n            return state\n        }\n}\n\n\nexport default combineReducers({\n    user\n})\n\n//向外暴露的状态的结构 ： {user: { }}"]},"metadata":{},"sourceType":"module"}