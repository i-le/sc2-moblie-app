{"ast":null,"code":"import\"antd-mobile/lib/nav-bar/style/css\";import _NavBar from\"antd-mobile/lib/nav-bar\";import _classCallCheck from\"/Users/s/Desktop/react/sc2-app/sc2-client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/s/Desktop/react/sc2-app/sc2-client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/Users/s/Desktop/react/sc2-app/sc2-client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/Users/s/Desktop/react/sc2-app/sc2-client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";/*\nmain page router componete\n*/import React from'react';import{Switch,Route,Redirect}from'react-router-dom';import{connect}from'react-redux';import BossInfo from'../boss-info/boss-info';import ProInfo from'../pro-info/pro-info';import Cookies from'js-cookie';import{getRedirectTo}from'../../utils';import{getUser}from'../../redux/Actions';import Boss from'../boss/boss';import Pro from'../pro/pro';import Message from'../message/message';import Personal from'../personal/personal';import NotFound from'../../components/not-found/not-found';import NavFooter from'../../components/nav-footer/nav-footer';import Chat from'../chat/chat';var Main=/*#__PURE__*/function(_React$Component){_inherits(Main,_React$Component);var _super=_createSuper(Main);function Main(){var _this;_classCallCheck(this,Main);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_super.call.apply(_super,[this].concat(args));_this.navList=[{path:'/boss',component:Boss,title:'Pro List _(:3」∠)_',icon:'pro',text:'Pro List'},{path:'/pro',component:Pro,title:'Boss List _(:3」∠)_',icon:'boss',text:'Boss List'},{path:'/message',component:Message,title:'Message (ﾟДﾟ≡ﾟдﾟ)!?',icon:'message',text:'Message'},{path:'/personal',component:Personal,title:'My Profile (｡･ω･｡)',icon:'personal',text:'Me'}];return _this;}_createClass(Main,[{key:\"componentDidMount\",//  in cookie have userid(&& redux user doent have _id)，send request get user's info\nvalue:function componentDidMount(){var userid=Cookies.get('userid');var _id=this.props.user._id;if(userid&&!_id){// send asyn request get user\nconsole.log('----');this.props.getUser();}}},{key:\"render\",value:function render(){// check if loged \n/* const {user} = this.props\n    if (!user._id) {\n      return <Redirect to='/login' />\n    } */ // read cookie userid if !，return back to log in page\nvar userid=Cookies.get('userid');// debugger\nif(!userid){return/*#__PURE__*/React.createElement(Redirect,{to:\"/login\"});}// if user => read state\nvar user=this.props.user;// \nif(!user){return null;}else{// if user has _id\n// then redirecting based on type and avatar s value\nvar _path=this.props.location.pathname;if(_path==='/'){_path=getRedirectTo(user.type,user.avatar);return/*#__PURE__*/React.createElement(Redirect,{to:_path});}}var navList=this.navList;var path=this.props.location.pathname;// request path\nvar currentNav=navList.find(function(nav){return nav.path===path;});// hide boss/pro 's footer navbar\nif(currentNav){if(user.type==='boss'){navList[1].hide=true;}else{navList[0].hide=true;}}return/*#__PURE__*/React.createElement(\"div\",null,currentNav?/*#__PURE__*/React.createElement(_NavBar,null,currentNav.title):null,/*#__PURE__*/React.createElement(Switch,null,navList.map(function(nav,index){return/*#__PURE__*/React.createElement(Route,{key:index,path:nav.path,component:nav.component});}),/*#__PURE__*/React.createElement(Route,{path:\"/bossinfo\",component:BossInfo}),/*#__PURE__*/React.createElement(Route,{path:\"/proinfo\",component:ProInfo}),/*#__PURE__*/React.createElement(Route,{path:\"/chat/:userid\",component:Chat}),/*#__PURE__*/React.createElement(Route,{component:NotFound})),currentNav?/*#__PURE__*/React.createElement(NavFooter,{navList:navList}):null);}}]);return Main;}(React.Component);export default connect(function(state){return{user:state.user};},{getUser:getUser})(Main);/* \n1.自动登录\n  - cookie中有userid(且redux中user没有_id)，发请求获取对应的user信息\n  - 没有userid，自动进入登录界面\n2.已经登录，当请求根路径时\n  - 根据user中type和 avatar 计算出重定向的路径并跳转\n*/","map":{"version":3,"sources":["/Users/s/Desktop/react/sc2-app/sc2-client/src/containers/main/Main.js"],"names":["React","Switch","Route","Redirect","connect","BossInfo","ProInfo","Cookies","getRedirectTo","getUser","Boss","Pro","Message","Personal","NotFound","NavFooter","Chat","Main","navList","path","component","title","icon","text","userid","get","_id","props","user","console","log","location","pathname","type","avatar","currentNav","find","nav","hide","map","index","Component","state"],"mappings":"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","sourcesContent":["/*\nmain page router componete\n*/\n\nimport React from 'react'\nimport {Switch, Route, Redirect} from 'react-router-dom'\nimport {connect} from 'react-redux'\nimport BossInfo from '../boss-info/boss-info'\nimport ProInfo from '../pro-info/pro-info'\nimport Cookies from 'js-cookie'\nimport {getRedirectTo} from '../../utils'\nimport {getUser} from '../../redux/Actions'\nimport Boss from '../boss/boss'\nimport Pro from '../pro/pro'\nimport Message from '../message/message'\nimport Personal from '../personal/personal'\nimport NotFound from '../../components/not-found/not-found'\nimport { NavBar } from 'antd-mobile'\nimport NavFooter from '../../components/nav-footer/nav-footer'\nimport Chat from '../chat/chat'\n\n\nclass Main extends React.Component {\n\n  // 导航组件的相关信息数据\n  navList = [ \n    {\n      path: '/boss', \n      component: Boss,\n      title: 'Pro List _(:3」∠)_',\n      icon: 'pro',\n      text: 'Pro List',\n    },\n    {\n      path: '/pro',\n      component: Pro,\n      title: 'Boss List _(:3」∠)_',\n      icon: 'boss',\n      text: 'Boss List',\n    },\n    {\n      path: '/message',\n      component: Message,\n      title: 'Message (ﾟДﾟ≡ﾟдﾟ)!?',\n      icon: 'message',\n      text: 'Message',\n    },\n    {\n      path: '/personal',\n      component: Personal,\n      title: 'My Profile (｡･ω･｡)',\n      icon: 'personal',\n      text: 'Me',\n    }\n  ]\n\n   \n\n//  in cookie have userid(&& redux user doent have _id)，send request get user's info\ncomponentDidMount() {\n    const userid = Cookies.get('userid')\n    const {_id} = this.props.user\n    if (userid && !_id) {\n      // send asyn request get user\n      console.log('----');\n      this.props.getUser()\n    }\n  }\n\n\n\n    render() {\n\n        // check if loged \n    /* const {user} = this.props\n    if (!user._id) {\n      return <Redirect to='/login' />\n    } */\n\n    // read cookie userid if !，return back to log in page\n    const userid = Cookies.get('userid')\n    // debugger\n    if (!userid) {\n      return <Redirect to='/login' />\n    }\n    // if user => read state\n    const {user} = this.props\n    // \n    if (!user) {\n      return null\n    } else {\n      // if user has _id\n      // then redirecting based on type and avatar s value\n      let path = this.props.location.pathname\n      if (path === '/') {\n        path = getRedirectTo(user.type, user.avatar)\n        return <Redirect to={path} />\n      }\n    }\n \n    const {navList} = this\n    const path = this.props.location.pathname // request path\n    const currentNav = navList.find(nav => nav.path === path)\n\n   \n    // hide boss/pro 's footer navbar\n    if (currentNav) {\n      if (user.type === 'boss') {\n        navList[1].hide = true\n      } else {\n        navList[0].hide = true\n      }\n    }\n   \n  \n\n        return (\n            <div>\n            {currentNav ? <NavBar>{currentNav.title}</NavBar> : null}\n                <Switch>\n                    {\n                      navList.map((nav, index) => <Route key={index} path={nav.path} component={nav.component} />)\n                    }\n                    <Route path='/bossinfo' component={BossInfo} />\n                    <Route path='/proinfo' component={ProInfo} />\n                    <Route path='/chat/:userid' component={Chat} />\n                    <Route component={NotFound} />\n                </Switch>\n                {currentNav ? <NavFooter navList={navList}></NavFooter> : null}\n            </div>\n        )\n    }\n}\n\nexport default connect(\n    state => ({user: state.user}),\n    {getUser}\n)(Main)\n\n/* \n1.自动登录\n  - cookie中有userid(且redux中user没有_id)，发请求获取对应的user信息\n  - 没有userid，自动进入登录界面\n2.已经登录，当请求根路径时\n  - 根据user中type和 avatar 计算出重定向的路径并跳转\n*/"]},"metadata":{},"sourceType":"module"}