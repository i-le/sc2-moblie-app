{"ast":null,"code":"import \"antd-mobile/lib/grid/style/css\";\nimport _Grid from \"antd-mobile/lib/grid\";\nimport \"antd-mobile/lib/input-item/style/css\";\nimport _InputItem from \"antd-mobile/lib/input-item\";\nimport \"antd-mobile/lib/nav-bar/style/css\";\nimport _NavBar from \"antd-mobile/lib/nav-bar\";\nimport \"antd-mobile/lib/icon/style/css\";\nimport _Icon from \"antd-mobile/lib/icon\";\nimport \"antd-mobile/lib/list/style/css\";\nimport _List from \"antd-mobile/lib/list\";\nvar _jsxFileName = \"/Users/s/Desktop/react/sc2-app/sc2-client/src/containers/chat/chat.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { sendMsg, readMsg } from '../../redux/Actions'; //import QueueAnim from 'rc-queue-anim'\n\nconst Item = _List.Item;\n\nclass Chat extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      // 当前一条消息\n      content: '',\n      // 是否显示表情包列表\n      isShowEmojis: false\n    };\n\n    this.handleSend = () => {\n      // 收集数据\n      const from = this.props.user._id;\n      const to = this.props.match.params.userid;\n      const content = this.state.content.trim(); // 发送请求（发消息）\n\n      if (content) {\n        this.props.sendMsg({\n          from,\n          to,\n          content\n        });\n      } // 重置\n\n\n      this.setState({\n        content: '',\n        isShowEmojis: false\n      });\n    };\n\n    this.toggleShow = () => {\n      // 异步手动派发resize事件，解决表情列表自身显示bug\n      const isShowEmojis = !this.state.isShowEmojis;\n      this.setState({\n        isShowEmojis\n      });\n\n      if (isShowEmojis) {\n        setTimeout(() => {\n          window.dispatchEvent(new Event('resize'));\n        }, 0);\n      }\n    };\n  }\n\n  // 在第一次render()之前回调\n  componentWillMount() {\n    // 初始化表情列表数据\n    const emojis = ['😀', '😁', '🤣', '😀', '😁', '🤣', '😀', '😁', '🤣', '😀', '😁', '🤣', '😀', '😁', '🤣', '😀', '😁', '🤣', '😀', '😁', '🤣', '😀', '😁', '🤣', '😁', '🤣', '😀', '😁', '🤣', '😀', '😁', '🤣', '😀', '😁', '🤣', '😁', '🤣', '😀', '😁', '🤣', '😀', '😁', '🤣', '😀', '😁', '🤣'];\n    this.emojis = emojis.map(emoji => ({\n      text: emoji\n    }));\n  }\n\n  componentDidMount() {\n    // 初次进入时，定位到底部\n    window.scrollTo(0, document.body.scrollHeight); // 发送请求，更新消息未读状态\n    // const from = this.props.match.params.userid\n    // const to = this.props.user._id\n    // this.props.readMsg(from, to)\n  }\n\n  componentDidUpdate() {\n    // 发送消息后，定位到底部\n    window.scrollTo(0, document.body.scrollHeight);\n  }\n\n  componentWillUnmount() {\n    /* 解决从聊天界面退出，不更新已读问题（异步请求，显示有延时） */\n    const from = this.props.match.params.userid;\n    const to = this.props.user._id;\n    this.props.readMsg(from, to);\n  }\n\n  render() {\n    const {\n      user\n    } = this.props;\n    const {\n      users,\n      chatMsgs\n    } = this.props.chat; // debugger\n    // chatMsgs: A和所有人聊天消息，过滤出和B的聊天\n\n    const meId = user._id; // 如果没有获取到数据，直接不做任何处理（解决刷新，清除users出现的异常）\n\n    if (!users[meId]) {\n      return null;\n    }\n\n    const targetId = this.props.match.params.userid;\n    const chatId = [meId, targetId].sort().join('_');\n    const msgs = chatMsgs.filter(msg => msg.chat_id === chatId); // msg target's avatar\n\n    const targetHeader = users[targetId].avatar;\n    const targetIcon = targetHeader ? require(`../../assets/sc2avatars/avatar2.png`) : null;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"chat-page\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(_NavBar, {\n      className: \"sticky-header\",\n      icon: /*#__PURE__*/React.createElement(_Icon, {\n        type: \"left\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 17\n        }\n      }),\n      onLeftClick: () => this.props.history.goBack(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }\n    }, users[targetId].username), /*#__PURE__*/React.createElement(_List, {\n      style: {\n        marginTop: 50,\n        marginBottom: 50\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }\n    }, msgs.map(msg => {\n      if (targetId === msg.from) {\n        // target sending msg to me\n        return /*#__PURE__*/React.createElement(Item, {\n          key: msg._id,\n          thumb: targetIcon,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 21\n          }\n        }, msg.content);\n      } else {\n        // sending msg to my target\n        return /*#__PURE__*/React.createElement(Item, {\n          key: msg._id,\n          className: \"chat-me\",\n          extra: \"Me\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 21\n          }\n        }, msg.content);\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"am-tab-bar\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(_InputItem, {\n      placeholder: \"Typing..\",\n      extra: /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          padding: 5\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        role: \"img\",\n        \"aria-label\": \"smile\",\n        onClick: this.toggleShow,\n        style: {\n          marginRight: 5\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 17\n        }\n      }, \"\\uD83D\\uDE00\"), /*#__PURE__*/React.createElement(\"span\", {\n        onClick: this.handleSend,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 17\n        }\n      }, \" Send \")),\n      onChange: val => this.setState({\n        content: val\n      }),\n      value: this.state.content,\n      onFocus: () => this.setState({\n        isShowEmojis: false\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 11\n      }\n    }), this.state.isShowEmojis ? /*#__PURE__*/React.createElement(_Grid, {\n      data: this.emojis,\n      columnNum: 8,\n      carouselMaxRow: 4,\n      isCarousel: true,\n      onClick: item => this.setState({\n        content: this.state.content + item.text\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 15\n      }\n    }) : null));\n  }\n\n}\n\nexport default connect(state => ({\n  user: state.user,\n  chat: state.chat\n}), {\n  sendMsg,\n  readMsg\n})(Chat);","map":{"version":3,"sources":["/Users/s/Desktop/react/sc2-app/sc2-client/src/containers/chat/chat.js"],"names":["React","Component","connect","sendMsg","readMsg","Item","Chat","state","content","isShowEmojis","handleSend","from","props","user","_id","to","match","params","userid","trim","setState","toggleShow","setTimeout","window","dispatchEvent","Event","componentWillMount","emojis","map","emoji","text","componentDidMount","scrollTo","document","body","scrollHeight","componentDidUpdate","componentWillUnmount","render","users","chatMsgs","chat","meId","targetId","chatId","sort","join","msgs","filter","msg","chat_id","targetHeader","avatar","targetIcon","require","history","goBack","username","marginTop","marginBottom","padding","marginRight","val","item"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport {connect} from 'react-redux'\nimport {NavBar, List, InputItem, Grid, Icon} from 'antd-mobile'\nimport {sendMsg, readMsg} from '../../redux/Actions'\n//import QueueAnim from 'rc-queue-anim'\n\nconst Item = List.Item\n\n\nclass Chat extends Component {\n  state = {\n    // 当前一条消息\n    content: '',\n    // 是否显示表情包列表\n    isShowEmojis: false\n  }\n\n  handleSend = () => {\n    // 收集数据\n    const from = this.props.user._id \n    const to = this.props.match.params.userid\n    const content = this.state.content.trim()\n    // 发送请求（发消息）\n    if (content) {\n      this.props.sendMsg({from, to, content})\n    }\n    // 重置\n    this.setState({\n      content: '',\n      isShowEmojis: false\n    })\n  }\n\n  toggleShow = () => {\n    // 异步手动派发resize事件，解决表情列表自身显示bug\n    const isShowEmojis = !this.state.isShowEmojis\n    this.setState({\n      isShowEmojis\n    })\n    if (isShowEmojis) {\n      setTimeout(() => {\n        window.dispatchEvent(new Event('resize'))\n      }, 0)\n    }\n  }\n\n  // 在第一次render()之前回调\n  componentWillMount() {\n    // 初始化表情列表数据\n    const emojis =  ['😀', '😁', '🤣','😀', '😁', '🤣','😀', '😁', '🤣','😀', '😁', '🤣','😀'\n    ,'😁', '🤣','😀', '😁', '🤣','😀', '😁', '🤣','😀', '😁', '🤣'\n    ,'😁', '🤣','😀', '😁', '🤣','😀', '😁', '🤣','😀', '😁', '🤣'\n    ,'😁', '🤣','😀', '😁', '🤣','😀', '😁', '🤣','😀', '😁', '🤣']\n    this.emojis = emojis.map(emoji => ({text: emoji}))\n  }\n\n  componentDidMount() {\n    // 初次进入时，定位到底部\n    window.scrollTo(0, document.body.scrollHeight)\n\n    // 发送请求，更新消息未读状态\n    // const from = this.props.match.params.userid\n    // const to = this.props.user._id\n    // this.props.readMsg(from, to)\n  }\n\n  componentDidUpdate() {\n    // 发送消息后，定位到底部\n    window.scrollTo(0, document.body.scrollHeight)\n  }\n\n  componentWillUnmount() {\n    /* 解决从聊天界面退出，不更新已读问题（异步请求，显示有延时） */\n    const from = this.props.match.params.userid\n    const to = this.props.user._id\n    this.props.readMsg(from, to)\n  }\n\n  render() {\n    const {user} = this.props\n    const {users, chatMsgs} = this.props.chat\n    // debugger\n    // chatMsgs: A和所有人聊天消息，过滤出和B的聊天\n    const meId = user._id\n    // 如果没有获取到数据，直接不做任何处理（解决刷新，清除users出现的异常）\n    if (!users[meId]) {\n      return null\n    }\n    const targetId = this.props.match.params.userid\n    const chatId = [meId, targetId].sort().join('_')\n\n    const msgs = chatMsgs.filter(msg => msg.chat_id === chatId)\n\n    // msg target's avatar\n    const targetHeader = users[targetId].avatar\n    const targetIcon = targetHeader ? require(`../../assets/sc2avatars/avatar2.png`) : null\n    return (\n      <div className=\"chat-page\">\n        <NavBar className='sticky-header' \n          icon={<Icon type='left' />}\n          onLeftClick={() => this.props.history.goBack()}\n          >\n          {users[targetId].username}\n        </NavBar>\n        <List style={{marginTop: 50, marginBottom: 50}}>\n\n            {\n              msgs.map(msg => {\n                if (targetId === msg.from) {\n                  // target sending msg to me\n                  return (\n                    <Item key={msg._id} thumb={targetIcon}>\n                      {msg.content}\n                    </Item>\n                  )\n                } else {\n                  // sending msg to my target\n                  return (\n                    <Item key={msg._id} className='chat-me' extra='Me'>\n                      {msg.content}\n                    </Item>\n                  )\n                }\n              })\n            }\n        </List>\n        <div className=\"am-tab-bar\">\n          <InputItem placeholder=\"Typing..\"\n            extra={\n              <div style={{padding: 5}}>\n                {/* <span onClick={() => this.setState({isShowEmojis: true})}\n                  style={{marginRight: 5}}\n                  >\n                  😀\n                </span> */}\n                <span role=\"img\" aria-label=\"smile\" onClick={this.toggleShow} style={{marginRight: 5}}>😀</span>\n                <span onClick={this.handleSend}> Send </span>\n              </div>\n            }\n            onChange={val => this.setState({content: val})}\n            value={this.state.content}\n            onFocus={() => this.setState({isShowEmojis: false})}\n          />\n          {\n            this.state.isShowEmojis ? (\n              <Grid data={this.emojis}\n                columnNum={8}\n                carouselMaxRow={4}\n                isCarousel={true}\n                onClick={item => this.setState({content: this.state.content + item.text})}\n                >\n              </Grid>\n            ) : null\n          }\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default connect(\n  state => ({user: state.user, chat: state.chat}),\n  {sendMsg, readMsg}\n)(Chat)"]},"metadata":{},"sourceType":"module"}