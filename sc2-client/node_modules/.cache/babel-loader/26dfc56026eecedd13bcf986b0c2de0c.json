{"ast":null,"code":"import \"antd-mobile/lib/nav-bar/style/css\";\nimport _NavBar from \"antd-mobile/lib/nav-bar\";\nvar _jsxFileName = \"/Users/s/Desktop/react/sc2-app/sc2-client/src/containers/main/Main.js\";\n\n/*\nmain page router componete\n*/\nimport React from 'react';\nimport { Switch, Route, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport BossInfo from '../boss-info/boss-info';\nimport ProInfo from '../pro-info/pro-info';\nimport Cookies from 'js-cookie';\nimport { getRedirectTo } from '../../utils';\nimport { getUser } from '../../redux/Actions';\nimport Boss from '../boss/boss';\nimport Pro from '../pro/pro';\nimport Message from '../message/message';\nimport Personal from '../personal/personal';\nimport NotFound from '../../components/not-found/not-found';\nimport NavFooter from '../../components/nav-footer/nav-footer';\n\nclass Main extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.navList = [{\n      path: '/boss',\n      component: Boss,\n      title: 'Pro List _(:3」∠)_',\n      icon: 'pro',\n      text: 'Pro'\n    }, {\n      path: '/pro',\n      component: Pro,\n      title: 'Boss List _(:3」∠)_',\n      icon: 'boss',\n      text: 'Boss'\n    }, {\n      path: '/message',\n      component: Message,\n      title: 'Message (ﾟДﾟ≡ﾟдﾟ)!?',\n      icon: 'message',\n      text: 'Message'\n    }, {\n      path: '/personal',\n      component: Personal,\n      title: 'My Profile (｡･ω･｡)',\n      icon: 'personal',\n      text: 'Me'\n    }];\n  }\n\n  //  in cookie have userid(&& redux user doent have _id)，send request get user's info\n  componentDidMount() {\n    const userid = Cookies.get('userid');\n    const {\n      _id\n    } = this.props.user;\n\n    if (userid && !_id) {\n      // send asyn request get user\n      console.log('----');\n      this.props.getUser();\n    }\n  }\n\n  render() {\n    // check if loged \n\n    /* const {user} = this.props\n    if (!user._id) {\n      return <Redirect to='/login' />\n    } */\n    // read cookie userid if !，return back to log in page\n    const userid = Cookies.get('userid'); // debugger\n\n    if (!userid) {\n      return /*#__PURE__*/React.createElement(Redirect, {\n        to: \"/login\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 14\n        }\n      });\n    } // if user => read state\n\n\n    const {\n      user\n    } = this.props; // \n\n    if (!user) {\n      return null;\n    } else {\n      // if user has _id\n      // then redirecting based on type and header s value\n      let path = this.props.location.pathname;\n\n      if (path === '/') {\n        path = getRedirectTo(user.type, user.avatar);\n        return /*#__PURE__*/React.createElement(Redirect, {\n          to: path,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 16\n          }\n        });\n      }\n    }\n\n    const {\n      navList\n    } = this;\n    const path = this.props.location.pathname; // request path\n\n    const currentNav = navList.find(nav => nav.path === path); // hide boss/pro 's footer navbar\n\n    if (currentNav) {\n      if (user.type === 'laoban') {\n        navList[1].hide = true;\n      } else {\n        navList[0].hide = true;\n      }\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 13\n      }\n    }, currentNav ? /*#__PURE__*/React.createElement(_NavBar, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 27\n      }\n    }, currentNav.title) : null, /*#__PURE__*/React.createElement(Switch, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 17\n      }\n    }, navList.map((nav, index) => /*#__PURE__*/React.createElement(Route, {\n      key: index,\n      path: nav.path,\n      component: nav.component,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 51\n      }\n    })), /*#__PURE__*/React.createElement(Route, {\n      path: \"/bossinfo\",\n      component: BossInfo,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: \"/proinfo\",\n      component: ProInfo,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      component: NotFound,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 21\n      }\n    })), currentNav ? /*#__PURE__*/React.createElement(NavFooter, {\n      navList: navList,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 31\n      }\n    }) : null);\n  }\n\n}\n\nexport default connect(state => ({\n  user: state.user\n}), {\n  getUser\n})(Main);\n/* \n1.自动登录\n  - cookie中有userid(且redux中user没有_id)，发请求获取对应的user信息\n  - 没有userid，自动进入登录界面\n2.已经登录，当请求根路径时\n  - 根据user中type和header计算出重定向的路径并跳转\n*/","map":{"version":3,"sources":["/Users/s/Desktop/react/sc2-app/sc2-client/src/containers/main/Main.js"],"names":["React","Switch","Route","Redirect","connect","BossInfo","ProInfo","Cookies","getRedirectTo","getUser","Boss","Pro","Message","Personal","NotFound","NavFooter","Main","Component","navList","path","component","title","icon","text","componentDidMount","userid","get","_id","props","user","console","log","render","location","pathname","type","avatar","currentNav","find","nav","hide","map","index","state"],"mappings":"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","sourcesContent":["/*\nmain page router componete\n*/\n\nimport React from 'react'\nimport {Switch, Route, Redirect} from 'react-router-dom'\nimport {connect} from 'react-redux'\nimport BossInfo from '../boss-info/boss-info'\nimport ProInfo from '../pro-info/pro-info'\nimport Cookies from 'js-cookie'\nimport {getRedirectTo} from '../../utils'\nimport {getUser} from '../../redux/Actions'\nimport Boss from '../boss/boss'\nimport Pro from '../pro/pro'\nimport Message from '../message/message'\nimport Personal from '../personal/personal'\nimport NotFound from '../../components/not-found/not-found'\nimport { NavBar } from 'antd-mobile'\nimport NavFooter from '../../components/nav-footer/nav-footer'\n\n\n\nclass Main extends React.Component {\n\n  // 导航组件的相关信息数据\n  navList = [ \n    {\n      path: '/boss', \n      component: Boss,\n      title: 'Pro List _(:3」∠)_',\n      icon: 'pro',\n      text: 'Pro',\n    },\n    {\n      path: '/pro',\n      component: Pro,\n      title: 'Boss List _(:3」∠)_',\n      icon: 'boss',\n      text: 'Boss',\n    },\n    {\n      path: '/message',\n      component: Message,\n      title: 'Message (ﾟДﾟ≡ﾟдﾟ)!?',\n      icon: 'message',\n      text: 'Message',\n    },\n    {\n      path: '/personal',\n      component: Personal,\n      title: 'My Profile (｡･ω･｡)',\n      icon: 'personal',\n      text: 'Me',\n    }\n  ]\n\n   \n\n//  in cookie have userid(&& redux user doent have _id)，send request get user's info\ncomponentDidMount() {\n    const userid = Cookies.get('userid')\n    const {_id} = this.props.user\n    if (userid && !_id) {\n      // send asyn request get user\n      console.log('----');\n      this.props.getUser()\n    }\n  }\n\n\n\n    render() {\n\n        // check if loged \n    /* const {user} = this.props\n    if (!user._id) {\n      return <Redirect to='/login' />\n    } */\n\n    // read cookie userid if !，return back to log in page\n    const userid = Cookies.get('userid')\n    // debugger\n    if (!userid) {\n      return <Redirect to='/login' />\n    }\n    // if user => read state\n    const {user} = this.props\n    // \n    if (!user) {\n      return null\n    } else {\n      // if user has _id\n      // then redirecting based on type and header s value\n      let path = this.props.location.pathname\n      if (path === '/') {\n        path = getRedirectTo(user.type, user.avatar)\n        return <Redirect to={path} />\n      }\n    }\n \n    const {navList} = this\n    const path = this.props.location.pathname // request path\n    const currentNav = navList.find(nav => nav.path === path)\n\n   \n    // hide boss/pro 's footer navbar\n    if (currentNav) {\n      if (user.type === 'laoban') {\n        navList[1].hide = true\n      } else {\n        navList[0].hide = true\n      }\n    }\n   \n  \n\n        return (\n            <div>\n            {currentNav ? <NavBar>{currentNav.title}</NavBar> : null}\n                <Switch>\n                    {\n                      navList.map((nav, index) => <Route key={index} path={nav.path} component={nav.component} />)\n                    }\n                    <Route path='/bossinfo' component={BossInfo} />\n                    <Route path='/proinfo' component={ProInfo} />\n                    <Route component={NotFound} />\n                </Switch>\n                {currentNav ? <NavFooter navList={navList}></NavFooter> : null}\n            </div>\n        )\n    }\n}\n\nexport default connect(\n    state => ({user: state.user}),\n    {getUser}\n)(Main)\n\n/* \n1.自动登录\n  - cookie中有userid(且redux中user没有_id)，发请求获取对应的user信息\n  - 没有userid，自动进入登录界面\n2.已经登录，当请求根路径时\n  - 根据user中type和header计算出重定向的路径并跳转\n*/"]},"metadata":{},"sourceType":"module"}