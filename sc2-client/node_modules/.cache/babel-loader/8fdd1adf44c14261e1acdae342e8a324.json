{"ast":null,"code":"/*\n包含n个reducer函数：\n根据老得state和指定的action返回一个新的state\n*/\nimport { combineReducers } from 'redux';\nimport { AUTH_SUCCESS, ERROR_MSG, RECEIVE_USER, RESET_USER, RECEIVE_USER_LIST } from './Action-types';\nimport { getRedirectTo } from '../utils/index';\nconst initUser = {\n  username: '',\n  type: '',\n  msg: '',\n  redirectTo: '' // 需要自动重定向的路由路径\n\n}; //产生user状态的reducer\n\nfunction user(state = initUser, action) {\n  switch (action.type) {\n    case AUTH_SUCCESS:\n      //data 是user\n      const {\n        type,\n        avatar\n      } = action.data;\n      return { ...state,\n        ...action.data,\n        redirectTo: getRedirectTo(type, avatar)\n      };\n\n    case ERROR_MSG:\n      //data 是msg\n      return { ...state,\n        msg: action.data\n      };\n\n    case RECEIVE_USER:\n      //data 是USER\n      return action.data;\n\n    case RESET_USER:\n      //data 是msg\n      return { ...initUser,\n        msg: action.data\n      };\n\n    default:\n      return state;\n  }\n}\n\nconst initUserList = []; // 产生userlist状态的reducer\n\nfunction userList(state = initUserList, action) {\n  switch (action.type) {\n    case RECEIVE_USER_LIST:\n      //data is userList\n      return action.data;\n\n    default:\n      return state;\n  }\n}\n\nexport default combineReducers({\n  user\n}); //向外暴露的状态的结构 ： {user: { }}","map":{"version":3,"sources":["/Users/s/Desktop/react/sc2-app/sc2-client/src/redux/Reducers.js"],"names":["combineReducers","AUTH_SUCCESS","ERROR_MSG","RECEIVE_USER","RESET_USER","RECEIVE_USER_LIST","getRedirectTo","initUser","username","type","msg","redirectTo","user","state","action","avatar","data","initUserList","userList"],"mappings":"AAAA;;;;AAIA,SAAQA,eAAR,QAA8B,OAA9B;AAEA,SACIC,YADJ,EAEIC,SAFJ,EAGIC,YAHJ,EAIIC,UAJJ,EAKIC,iBALJ,QAMO,gBANP;AAQA,SAAQC,aAAR,QAA4B,gBAA5B;AAEA,MAAMC,QAAQ,GAAG;AACbC,EAAAA,QAAQ,EAAE,EADG;AAEbC,EAAAA,IAAI,EAAE,EAFO;AAGbC,EAAAA,GAAG,EAAE,EAHQ;AAIbC,EAAAA,UAAU,EAAE,EAJC,CAIE;;AAJF,CAAjB,C,CAOA;;AACA,SAASC,IAAT,CAAcC,KAAK,GAAGN,QAAtB,EAAgCO,MAAhC,EAAwC;AACpC,UAAQA,MAAM,CAACL,IAAf;AACI,SAAKR,YAAL;AAAmB;AACnB,YAAM;AAACQ,QAAAA,IAAD;AAAOM,QAAAA;AAAP,UAAiBD,MAAM,CAACE,IAA9B;AACI,aAAO,EAAC,GAAGH,KAAJ;AAAW,WAAGC,MAAM,CAACE,IAArB;AAA2BL,QAAAA,UAAU,EAAEL,aAAa,CAACG,IAAD,EAAOM,MAAP;AAApD,OAAP;;AACJ,SAAKb,SAAL;AAAgB;AACZ,aAAO,EAAC,GAAGW,KAAJ;AAAWH,QAAAA,GAAG,EAAEI,MAAM,CAACE;AAAvB,OAAP;;AACJ,SAAKb,YAAL;AAAmB;AACf,aAAOW,MAAM,CAACE,IAAd;;AACJ,SAAKZ,UAAL;AAAiB;AACb,aAAO,EAAC,GAAGG,QAAJ;AAAcG,QAAAA,GAAG,EAAEI,MAAM,CAACE;AAA1B,OAAP;;AACJ;AACI,aAAOH,KAAP;AAXR;AAaH;;AAED,MAAMI,YAAY,GAAG,EAArB,C,CACA;;AACA,SAASC,QAAT,CAAkBL,KAAK,GAACI,YAAxB,EAAsCH,MAAtC,EAA8C;AAC1C,UAAQA,MAAM,CAACL,IAAf;AACI,SAAKJ,iBAAL;AAAwB;AACxB,aAAOS,MAAM,CAACE,IAAd;;AACA;AACI,aAAOH,KAAP;AAJR;AAMH;;AAID,eAAeb,eAAe,CAAC;AAC3BY,EAAAA;AAD2B,CAAD,CAA9B,C,CAIA","sourcesContent":["/*\n包含n个reducer函数：\n根据老得state和指定的action返回一个新的state\n*/\nimport {combineReducers} from 'redux'\n\nimport {\n    AUTH_SUCCESS,\n    ERROR_MSG,\n    RECEIVE_USER,\n    RESET_USER,\n    RECEIVE_USER_LIST\n} from './Action-types'\n\nimport {getRedirectTo} from '../utils/index'\n\nconst initUser = {\n    username: '',\n    type: '',\n    msg: '',\n    redirectTo: '' // 需要自动重定向的路由路径\n}\n\n//产生user状态的reducer\nfunction user(state = initUser, action) {\n    switch (action.type) {\n        case AUTH_SUCCESS: //data 是user\n        const {type, avatar} = action.data\n            return {...state, ...action.data, redirectTo: getRedirectTo(type, avatar)}\n        case ERROR_MSG: //data 是msg\n            return {...state, msg: action.data}\n        case RECEIVE_USER: //data 是USER\n            return action.data\n        case RESET_USER: //data 是msg\n            return {...initUser, msg: action.data}\n        default:\n            return state\n        }\n}\n\nconst initUserList = []\n// 产生userlist状态的reducer\nfunction userList(state=initUserList, action) {\n    switch (action.type) {\n        case RECEIVE_USER_LIST: //data is userList\n        return action.data\n        default:\n            return state\n    }\n}\n\n\n\nexport default combineReducers({\n    user\n})\n\n//向外暴露的状态的结构 ： {user: { }}"]},"metadata":{},"sourceType":"module"}