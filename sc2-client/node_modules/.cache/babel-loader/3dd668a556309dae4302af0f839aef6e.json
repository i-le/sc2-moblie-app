{"ast":null,"code":"/*\n包含n个action creator\n异步action\n同步action\n*/\nimport { AUTH_SUCCESS, ERROR_MSG } from './Action-types';\nimport { reqRegister, reqLogin } from '../api'; //授权成功的同步 action\n\nconst authSuccess = user => ({\n  type: AUTH_SUCCESS,\n  data: user\n}); //错误提示星系的同步action\n\n\nconst errorMsg = msg => ({\n  type: ERROR_MSG,\n  data: msg\n}); //注册异步 action\n\n\nexport const register = user => {\n  const {\n    username,\n    password,\n    password2,\n    type\n  } = user;\n\n  if (!username) {\n    return errorMsg('username is a MUST');\n  }\n\n  if (password !== password2) {\n    return errorMsg('ensure SAME password');\n  }\n\n  return async dispatch => {\n    //发送注册的异步请求\n    const response = await reqRegister({\n      username,\n      password,\n      type\n    });\n\n    if (response.data.code === 0) {\n      //分发授权成功成功action\n      dispatch(authSuccess(response.data.data));\n    } else {\n      //分发错误提示信息的同步action\n      dispatch(errorMsg(response.data.msg));\n    }\n  };\n}; //登陆异步 action\n\nexport const login = user => {\n  const {\n    username,\n    password\n  } = user;\n\n  if (!username) {\n    return errorMsg('username is a MUST');\n  }\n\n  if (!password) {\n    return errorMsg('PASSWORD is a MUST');\n  }\n\n  return async dispatch => {\n    //发送注册的异步请求\n    const response = await reqLogin(user);\n\n    if (response.data.code === 0) {\n      dispatch(authSuccess(response.data.data));\n    } else {\n      dispatch(errorMsg(response.data.msg));\n    }\n  };\n};","map":{"version":3,"sources":["/Users/s/Desktop/react/hiring-app/sc2-client/src/redux/Actions.js"],"names":["AUTH_SUCCESS","ERROR_MSG","reqRegister","reqLogin","authSuccess","user","type","data","errorMsg","msg","register","username","password","password2","dispatch","response","code","login"],"mappings":"AAAA;;;;;AAKA,SACIA,YADJ,EAEIC,SAFJ,QAGO,gBAHP;AAKA,SACIC,WADJ,EAEIC,QAFJ,QAGO,QAHP,C,CAQA;;AACA,MAAMC,WAAW,GAAIC,IAAD,KAAW;AAACC,EAAAA,IAAI,EAAEN,YAAP;AAAqBO,EAAAA,IAAI,EAAEF;AAA3B,CAAX,CAApB,C,CACA;;;AACA,MAAMG,QAAQ,GAAIC,GAAD,KAAU;AAACH,EAAAA,IAAI,EAAEL,SAAP;AAAkBM,EAAAA,IAAI,EAAEE;AAAxB,CAAV,CAAjB,C,CAEA;;;AACA,OAAO,MAAMC,QAAQ,GAAIL,IAAD,IAAU;AAC9B,QAAM;AACFM,IAAAA,QADE;AAEFC,IAAAA,QAFE;AAGFC,IAAAA,SAHE;AAIFP,IAAAA;AAJE,MAKFD,IALJ;;AAMA,MAAG,CAACM,QAAJ,EAAc;AACV,WAAOH,QAAQ,CAAC,oBAAD,CAAf;AACH;;AACD,MAAGI,QAAQ,KAAKC,SAAhB,EAA2B;AACvB,WAAOL,QAAQ,CAAC,sBAAD,CAAf;AACH;;AAKD,SAAO,MAAMM,QAAN,IAAkB;AACrB;AACA,UAAMC,QAAQ,GAAG,MAAMb,WAAW,CAAC;AAACS,MAAAA,QAAD;AAAWC,MAAAA,QAAX;AAAqBN,MAAAA;AAArB,KAAD,CAAlC;;AACA,QAAIS,QAAQ,CAACR,IAAT,CAAcS,IAAd,KAAuB,CAA3B,EAA8B;AAC1B;AACAF,MAAAA,QAAQ,CAACV,WAAW,CAACW,QAAQ,CAACR,IAAT,CAAcA,IAAf,CAAZ,CAAR;AACH,KAHD,MAGO;AACH;AACAO,MAAAA,QAAQ,CAACN,QAAQ,CAACO,QAAQ,CAACR,IAAT,CAAcE,GAAf,CAAT,CAAR;AACH;AACJ,GAVD;AAWH,CA5BM,C,CA8BP;;AACA,OAAO,MAAMQ,KAAK,GAAIZ,IAAD,IAAU;AAC3B,QAAM;AAACM,IAAAA,QAAD;AAAWC,IAAAA;AAAX,MAAuBP,IAA7B;;AACA,MAAG,CAACM,QAAJ,EAAc;AACV,WAAOH,QAAQ,CAAC,oBAAD,CAAf;AACH;;AACD,MAAG,CAACI,QAAJ,EAAc;AACV,WAAOJ,QAAQ,CAAC,oBAAD,CAAf;AACH;;AAED,SAAO,MAAMM,QAAN,IAAkB;AACrB;AACA,UAAMC,QAAQ,GAAG,MAAMZ,QAAQ,CAACE,IAAD,CAA/B;;AACA,QAAIU,QAAQ,CAACR,IAAT,CAAcS,IAAd,KAAuB,CAA3B,EAA8B;AAC1BF,MAAAA,QAAQ,CAACV,WAAW,CAACW,QAAQ,CAACR,IAAT,CAAcA,IAAf,CAAZ,CAAR;AACH,KAFD,MAEO;AACHO,MAAAA,QAAQ,CAACN,QAAQ,CAACO,QAAQ,CAACR,IAAT,CAAcE,GAAf,CAAT,CAAR;AACH;AACJ,GARD;AASH,CAlBM","sourcesContent":["/*\n包含n个action creator\n异步action\n同步action\n*/\nimport {\n    AUTH_SUCCESS,\n    ERROR_MSG\n} from './Action-types'\n\nimport {\n    reqRegister,\n    reqLogin\n} from '../api'\n\n\n\n\n//授权成功的同步 action\nconst authSuccess = (user) => ({type: AUTH_SUCCESS, data: user})\n//错误提示星系的同步action\nconst errorMsg = (msg) => ({type: ERROR_MSG, data: msg})\n\n//注册异步 action\nexport const register = (user) => {\n    const {\n        username, \n        password, \n        password2, \n        type\n    } = user\n    if(!username) {\n        return errorMsg('username is a MUST')\n    }\n    if(password !== password2) {\n        return errorMsg('ensure SAME password')\n    }\n\n\n    \n\n    return async dispatch => {\n        //发送注册的异步请求\n        const response = await reqRegister({username, password, type})\n        if (response.data.code === 0) {\n            //分发授权成功成功action\n            dispatch(authSuccess(response.data.data))\n        } else {\n            //分发错误提示信息的同步action\n            dispatch(errorMsg(response.data.msg))\n        }\n    }\n}\n\n//登陆异步 action\nexport const login = (user) => {\n    const {username, password} = user\n    if(!username) {\n        return errorMsg('username is a MUST')\n    }\n    if(!password) {\n        return errorMsg('PASSWORD is a MUST')\n    }\n\n    return async dispatch => {\n        //发送注册的异步请求\n        const response = await reqLogin(user)\n        if (response.data.code === 0) {\n            dispatch(authSuccess(response.data.data))\n        } else {\n            dispatch(errorMsg(response.data.msg))\n        }\n    }\n}"]},"metadata":{},"sourceType":"module"}